"""add_job_model_and_extend_bid_profile_models_v2

Revision ID: 7cc915bde750
Revises: c781b2273045
Create Date: 2025-05-25 07:58:38.100427

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '7cc915bde750'
down_revision: Union[str, None] = 'c781b2273045' 
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###

    # Create jobs table
    op.create_table('jobs',
        sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
        sa.Column('title', sa.String(), nullable=True),
        sa.Column('description', sa.Text(), nullable=True),
        sa.PrimaryKeyConstraint('id')
    )

    # Add columns to profiles table
    op.add_column('profiles', sa.Column('skills', sa.JSON(), nullable=True))
    op.add_column('profiles', sa.Column('experience_level', sa.String(), nullable=True))

    # Add columns to bids table
    op.add_column('bids', sa.Column('prompt_template_id', sa.Integer(), nullable=True))
    op.add_column('bids', sa.Column('generated_bid_text', sa.String(), nullable=True))
    op.add_column('bids', sa.Column('bid_settings_snapshot', sa.JSON(), nullable=True))

    # Modify bids.job_id column type (assuming it was String before and needs to be UUID)
    # First, check if the existing job_id column can be altered directly.
    # If it holds non-UUID data, this will fail. This script assumes it's safe to alter.
    # For a real scenario, data migration might be needed if job_id currently holds non-UUID compatible strings.
    op.alter_column('bids', 'job_id',
               existing_type=sa.String(), # IMPORTANT: This must match the actual current type of job_id in the DB
               type_=postgresql.UUID(as_uuid=True),
               existing_nullable=False,
               postgresql_using='job_id::uuid') # Add this if conversion is needed from string to UUID in PostgreSQL

    # Create ForeignKey from bids.job_id to jobs.id
    op.create_foreign_key(
        'fk_bids_job_id_jobs',  # Constraint name
        'bids',        # Source table
        'jobs',        # Target table
        ['job_id'],    # Source columns
        ['id']         # Target columns
    )

    # Create ForeignKey from bids.prompt_template_id to ai_prompts.id
    op.create_foreign_key(
        'fk_bids_prompt_template_id_ai_prompts', # Constraint name
        'bids',                 # Source table
        'ai_prompts',           # Target table
        ['prompt_template_id'], # Source columns
        ['id']                  # Target columns
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###

    # Drop ForeignKey from bids.prompt_template_id
    op.drop_constraint('fk_bids_prompt_template_id_ai_prompts', 'bids', type_='foreignkey')

    # Drop ForeignKey from bids.job_id
    op.drop_constraint('fk_bids_job_id_jobs', 'bids', type_='foreignkey')

    # Revert bids.job_id column type (assuming it was String)
    op.alter_column('bids', 'job_id',
               existing_type=postgresql.UUID(as_uuid=True),
               type_=sa.String(), # Revert to original type
               existing_nullable=False)

    # Remove columns from bids table
    op.drop_column('bids', 'bid_settings_snapshot')
    op.drop_column('bids', 'generated_bid_text')
    op.drop_column('bids', 'prompt_template_id')

    # Remove columns from profiles table
    op.drop_column('profiles', 'experience_level')
    op.drop_column('profiles', 'skills')

    # Drop jobs table
    op.drop_table('jobs')
    # ### end Alembic commands ###
