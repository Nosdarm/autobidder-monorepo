import json
import os

PROFILES_FILE = "profiles.json"

def load_profiles():
    if not os.path.exists(PROFILES_FILE):
        return []
    with open(PROFILES_FILE) as f:
        return json.load(f)

# üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏—è –æ–¥–Ω–æ–≥–æ –¥–∂–æ–±–∞ —Ñ–∏–ª—å—Ç—Ä–∞–º
def job_matches_filters(job, filters):
    title = job["title"].lower()
    desc = job["description"].lower()
    combined = title + " " + desc
    budget = job.get("budget", 0)

    includes = [kw.lower() for kw in filters.get("include_keywords", [])]
    excludes = [kw.lower() for kw in filters.get("exclude_keywords", [])]
    min_budget = filters.get("min_budget", 0)
    max_budget = filters.get("max_budget", float("inf"))

    if includes and not any(kw in combined for kw in includes):
        return False
    if excludes and any(kw in combined for kw in excludes):
        return False
    if budget < min_budget or budget > max_budget:
        return False

    return True

# üß† –ó–∞–ø—É—Å–∫ –∞–≤—Ç–æ–±–∏–¥–∞
def run_autobid():
    job = {
        "title": "Figma dashboard for SaaS product",
        "description": "Looking for a UI/UX designer familiar with dashboards and Figma.",
        "budget": 300
    }

    profiles = load_profiles()
    for profile in profiles:
        if not profile.get("autobid_enabled"):
            print(f"‚è≠Ô∏è  [{profile['name']}] Autobid –≤—ã–∫–ª—é—á–µ–Ω.")
            continue

        filters = profile.get("filters", {})
        print(f"\nüîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–æ—Ñ–∏–ª—è: {profile['name']}")
        print(f"   ‚û§ –§–∏–ª—å—Ç—Ä—ã: {filters}")
        if job_matches_filters(job, filters):
            print(f"‚úÖ –ü–æ–¥—Ö–æ–¥–∏—Ç! –ë—É–¥–µ–º –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å –æ—Ç–∫–ª–∏–∫.")
        else:
            print(f"‚ùå –ù–µ –ø–æ–¥—Ö–æ–¥–∏—Ç. –ü—Ä–æ–ø—É—Å–∫–∞–µ–º.")

# üí° –î–ª—è –æ—Ç–ª–∞–¥–∫–∏
if __name__ == "__main__":
    run_autobid()
