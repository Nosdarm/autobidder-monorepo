# app/services/template_service.py
import os
import json
from fastapi import HTTPException # APIRouter removed

TEMPLATE_DIR = "user_templates"
os.makedirs(TEMPLATE_DIR, exist_ok=True)
# router = APIRouter(prefix="/templates", tags=["Templates"]) # Router definition removed

# üìù –ü—É—Ç—å –∫ —à–∞–±–ª–æ–Ω—É


def get_template_path(user_id: str):
    return os.path.join(TEMPLATE_DIR, f"{user_id}.json")

# ‚úÖ –ü–æ–ª—É—á–∏—Ç—å —à–∞–±–ª–æ–Ω –∏ –ø—Ä–æ–º—Ç


def get_user_template(user_id: str):
    path = get_template_path(user_id)
    if not os.path.exists(path):
        return {
            "prompt": (
                "–¢—ã –æ–ø—ã—Ç–Ω—ã–π —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç. –ù–∞–ø–∏—à–∏ –æ—Ç–∫–ª–∏–∫ –Ω–∞ –≤–∞–∫–∞–Ω—Å–∏—é "
                "–ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–æ."
            ),
            "template": (
                "–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ! –Ø —É–≤–∏–¥–µ–ª –≤–∞—à—É –∑–∞–¥–∞—á—É: {title}. –£ –º–µ–Ω—è –µ—Å—Ç—å "
                "—Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–π –æ–ø—ã—Ç –∏ —è —Ö–æ—Ç–µ–ª –±—ã –æ–±—Å—É–¥–∏—Ç—å –¥–µ—Ç–∞–ª–∏."
            )
        }
    with open(path, "r", encoding="utf-8") as f:
        return json.load(f)

# üíæ –û–±–Ω–æ–≤–∏—Ç—å —à–∞–±–ª–æ–Ω –∏ –ø—Ä–æ–º—Ç


def update_user_template(user_id: str, data: dict):
    path = get_template_path(user_id)
    with open(path, "w", encoding="utf-8") as f:
        json.dump(data, f, indent=2, ensure_ascii=False)
    return {"status": "updated"}

# üîó API-—Ä–æ—É—Ç—ã (These should be in a router file, not the service file)
# @router.get("/{user_id}")
# def api_get_template(user_id: str):
#     return get_user_template(user_id)

# @router.post("/{user_id}")
# def api_update_template(user_id: str, data: dict):
#     if "prompt" not in data or "template" not in data:
#         raise HTTPException(status_code=400,
#                             detail="Missing 'prompt' or 'template'")
#     return update_user_template(user_id, data)
