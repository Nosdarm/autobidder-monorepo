"""add_external_signals_to_bid_and_create_bid_outcome_table

Revision ID: 4a005d9243b4
Revises: 7cc915bde750
Create Date: 2025-05-25 08:03:15.032271

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql # For JSON type if not directly in sa.JSON

# revision identifiers, used by Alembic.
revision: str = '4a005d9243b4'
down_revision: Union[str, None] = '7cc915bde750'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###

    # Add external_signals_snapshot column to bids table
    op.add_column('bids', sa.Column('external_signals_snapshot', sa.JSON(), nullable=True))

    # Create bid_outcomes table
    op.create_table('bid_outcomes',
        sa.Column('id', sa.String(), nullable=False), # Default will be handled by the model: default=lambda: str(uuid.uuid4())
        sa.Column('bid_id', sa.String(), nullable=False),
        sa.Column('outcome_timestamp', sa.DateTime(), nullable=False),
        sa.Column('is_success', sa.Boolean(), nullable=False),
        sa.Column('details', sa.Text(), nullable=True),
        sa.PrimaryKeyConstraint('id'),
        sa.ForeignKeyConstraint(['bid_id'], ['bids.id'], name='fk_bid_outcomes_bid_id_bids', ondelete='CASCADE')
    )
    op.create_index(op.f('ix_bid_outcomes_bid_id'), 'bid_outcomes', ['bid_id'], unique=False)
    op.create_index(op.f('ix_bid_outcomes_id'), 'bid_outcomes', ['id'], unique=False) # Index for primary key is good practice
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###

    # Drop bid_outcomes table
    op.drop_index(op.f('ix_bid_outcomes_id'), table_name='bid_outcomes')
    op.drop_index(op.f('ix_bid_outcomes_bid_id'), table_name='bid_outcomes')
    op.drop_table('bid_outcomes')

    # Remove external_signals_snapshot column from bids table
    op.drop_column('bids', 'external_signals_snapshot')
    # ### end Alembic commands ###
